(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(667),c=t.n(A),l=new URL(t(705),t.b),d=a()(o()),s=c()(l);d.push([e.id,"@font-face {\n    font-family: 'Kollektif';\n    src: url("+s+") format('truetype');\n  } \n\nhtml {\n    position: relative;\n    min-height: 100%;\n}\n\nbody {\n    display: flex;\n    font-family: 'Kollektif';\n    background-color: #18191A;\n    color: #E4E6EB;\n    flex-direction: column;\n}\n\n#heading {\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n}\n\nh1 {\n    text-align: center;\n    font-size: clamp(1rem, 5vw + 1rem, 5rem);\n}\n\n#container {\n    display: flex;\n    border: 3px solid #242526;\n    height: 70vh;\n}\n\n#tracker {\n    border-right: 3px solid #242526;\n    width: 33%;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n}\n\n#infoPane {\n    display: flex;\n    flex-direction: column;\n    border-left: 3px solid #242526;\n    width: 67%;\n    background-color: #242526;\n    gap: 16px;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n} \n\n#trackerButtons {\n    display: flex;\n    gap: 16px;\n    justify-content: flex-start;\n    margin-top: 4px;\n}\n\n.buttonBarButton {\n    border-radius: 6px;\n    border-color: #18191A;\n    padding: 8px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border-style: solid;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n}\n\n.buttonBarButton:hover {\n    border: solid rgb(99, 0, 0) 2px;\n    background-color: #18191A;\n}\n\n#questCount {\n    text-align: right;\n    align-self: flex-end;\n}\n\n.questDivSelected {\n    background-color: #242526;\n}\n\n#questNameLabel {\n    text-align: center;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questDescriptionLabel {\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questdueDateInput {\n    border: none;\n    background-color: #3A3B3C;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 4px;\n}\n\n#questdueDateLabel {\n    text-align: center;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#addObjectiveButton {\n    justify-content: center;\n    width: 25%;\n    border-radius: 6px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border: none;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n    \n}\n\n.priorityButton.priorityButtonSelected {\n    border: solid 2px yellow;\n}\n\n.priorityButton {\n    width: 20%;\n    padding: 4px;\n    border-style: none;\n    border-radius: 4px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n}\n\n#priorityLabel {\n    text-align: center;\n}\n\n#button0 {\n    background-color: grey;\n}\n\n#button1 {\n    background-color: green;\n}\n\n#button2 {\n    background-color: rgb(0, 47, 255);\n}\n\n#button3 {\n    background-color: purple;\n}\n\n#button4 {\n    background-color: orange;\n}\n\n.questPriority1 {\n    color: grey;\n}\n\n.questPriority2 {\n    color: green;\n}\n\n.questPriority3 {\n    color: rgb(0, 47, 255);\n}\n\n.questPriority4 {\n    color: purple;\n}\n\n.questPriority5 {\n    color: orange;\n}\n\n.objectiveContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n}\n\n.objective {\n    width: 94%;\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;   \n}\n\n.deleteObjectiveButton {\n    border: none;\n    width: 5%;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 6px;\n    align-self: flex-end;\n}\n\n.deleteObjectiveButton:hover {\n    background-color: #3A3B3C;\n    color: rgb(99, 0, 0);\n}\n\ninput {\n    background-color: #242526;\n    color: #E4E6EB;\n}\n\n#rewardsLabel {\n    text-align: center;\n    color: yellow;\n    align-self: flex-end;\n    margin-top: clamp(1rem, 5vw + 1rem, 5rem);\n}\n\nimg {\n    margin-left: 50px;\n    height: clamp(1rem, 5vw + 1rem, 10rem);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB,+DAAqD;EACvD;;AAEF;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,yBAAyB;IACzB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,8BAA8B;IAC9B,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,+BAA+B;IAC/B,UAAU;IACV,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,UAAU;IACV,yBAAyB;IACzB,SAAS;IACT,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,SAAS;IACT,2BAA2B;IAC3B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,+BAA+B;IAC/B,gBAAgB;IAChB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;IACI,+BAA+B;IAC/B,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,wCAAwC;IACxC,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,2CAA2C;IAC3C,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,2CAA2C;IAC3C,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,2CAA2C;IAC3C,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,UAAU;IACV,kBAAkB;IAClB,+BAA+B;IAC/B,gBAAgB;IAChB,YAAY;IACZ,0CAA0C;;AAE9C;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,0CAA0C;AAC9C;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,8BAA8B;;AAElC;;AAEA;IACI,UAAU;IACV,eAAe;IACf,2CAA2C;IAC3C,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,+BAA+B;IAC/B,gBAAgB;IAChB,2CAA2C;IAC3C,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,oBAAoB;IACpB,yCAAyC;AAC7C;;AAEA;IACI,iBAAiB;IACjB,sCAAsC;AAC1C",sourcesContent:["@font-face {\n    font-family: 'Kollektif';\n    src: url('./Assets/Kollektif.ttf') format('truetype');\n  } \n\nhtml {\n    position: relative;\n    min-height: 100%;\n}\n\nbody {\n    display: flex;\n    font-family: 'Kollektif';\n    background-color: #18191A;\n    color: #E4E6EB;\n    flex-direction: column;\n}\n\n#heading {\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n}\n\nh1 {\n    text-align: center;\n    font-size: clamp(1rem, 5vw + 1rem, 5rem);\n}\n\n#container {\n    display: flex;\n    border: 3px solid #242526;\n    height: 70vh;\n}\n\n#tracker {\n    border-right: 3px solid #242526;\n    width: 33%;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n}\n\n#infoPane {\n    display: flex;\n    flex-direction: column;\n    border-left: 3px solid #242526;\n    width: 67%;\n    background-color: #242526;\n    gap: 16px;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n} \n\n#trackerButtons {\n    display: flex;\n    gap: 16px;\n    justify-content: flex-start;\n    margin-top: 4px;\n}\n\n.buttonBarButton {\n    border-radius: 6px;\n    border-color: #18191A;\n    padding: 8px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border-style: solid;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n}\n\n.buttonBarButton:hover {\n    border: solid rgb(99, 0, 0) 2px;\n    background-color: #18191A;\n}\n\n#questCount {\n    text-align: right;\n    align-self: flex-end;\n}\n\n.questDivSelected {\n    background-color: #242526;\n}\n\n#questNameLabel {\n    text-align: center;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questDescriptionLabel {\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questdueDateInput {\n    border: none;\n    background-color: #3A3B3C;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 4px;\n}\n\n#questdueDateLabel {\n    text-align: center;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#addObjectiveButton {\n    justify-content: center;\n    width: 25%;\n    border-radius: 6px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border: none;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n    \n}\n\n.priorityButton.priorityButtonSelected {\n    border: solid 2px yellow;\n}\n\n.priorityButton {\n    width: 20%;\n    padding: 4px;\n    border-style: none;\n    border-radius: 4px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n}\n\n#priorityLabel {\n    text-align: center;\n}\n\n#button0 {\n    background-color: grey;\n}\n\n#button1 {\n    background-color: green;\n}\n\n#button2 {\n    background-color: rgb(0, 47, 255);\n}\n\n#button3 {\n    background-color: purple;\n}\n\n#button4 {\n    background-color: orange;\n}\n\n.questPriority1 {\n    color: grey;\n}\n\n.questPriority2 {\n    color: green;\n}\n\n.questPriority3 {\n    color: rgb(0, 47, 255);\n}\n\n.questPriority4 {\n    color: purple;\n}\n\n.questPriority5 {\n    color: orange;\n}\n\n.objectiveContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n}\n\n.objective {\n    width: 94%;\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;   \n}\n\n.deleteObjectiveButton {\n    border: none;\n    width: 5%;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 6px;\n    align-self: flex-end;\n}\n\n.deleteObjectiveButton:hover {\n    background-color: #3A3B3C;\n    color: rgb(99, 0, 0);\n}\n\ninput {\n    background-color: #242526;\n    color: #E4E6EB;\n}\n\n#rewardsLabel {\n    text-align: center;\n    color: yellow;\n    align-self: flex-end;\n    margin-top: clamp(1rem, 5vw + 1rem, 5rem);\n}\n\nimg {\n    margin-left: 50px;\n    height: clamp(1rem, 5vw + 1rem, 10rem);\n}"],sourceRoot:""}]);const u=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],A=0;A<e.length;A++){var c=e[A],l=r.base?c[0]+r.base:c[0],d=i[l]||0,s="".concat(l," ").concat(d);i[l]=d+1;var u=t(s),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=A,n.splice(A,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var c=r(e,o),l=0;l<i.length;l++){var d=t(i[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},705:(e,n,t)=>{e.exports=t.p+"33fdfd1d0f21c0c8283b.ttf"},443:(e,n,t)=>{e.exports=t.p+"3cc0940590fd9f6b04cd.png"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),c=t.n(A),l=t(216),d=t.n(l),s=t(589),u=t.n(s),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var C=t(443);const f=e=>{let n=e,t=!1;return{getObjectiveName:()=>n,completeObjective:()=>{t=!0},incompleteObjective:()=>{t=!1},changeObjectiveName:function(e){n=e}}};let b=new Array;const B=function(e){let n=e;return n=document.createElement("input"),n.classList.add("infoPaneLabel"),n.setAttribute("id",e),n.setAttribute("type","text"),n},g=function(){b.forEach((e=>{e.changeQuestChosen("false");let n=document.createElement("div");n.classList.add("questDiv"),e.getPriority()<="1"?n.classList.add("questPriority1"):"2"===e.getPriority()?n.classList.add("questPriority2"):"3"===e.getPriority()?n.classList.add("questPriority3"):"4"===e.getPriority()?n.classList.add("questPriority4"):"5"===e.getPriority()&&n.classList.add("questPriority5"),n.innerText=e.getName(),n.addEventListener("click",(function(){v(infoPane),y(e);let t=document.getElementsByClassName("questDiv");Array.from(t).forEach((function(e){e.classList.remove("questDivSelected")})),n.classList.add("questDivSelected"),e.changeQuestChosen("true")})),document.getElementById("tracker").appendChild(n)}))},h=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},v=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},y=function(e){let n=B("questNameLabel");n.value=e.getName(),n.addEventListener("input",(function(n){e.changeName(this.value)})),infoPane.appendChild(n);let t=document.createElement("div");t.classList.add("questdueDiv");let r=document.createElement("label");r.setAttribute("for","questdueDateInput"),r.innerText="Quest Completion Due by: ";let o=document.createElement("input");o.setAttribute("type","date"),o.value=e.getQuestdueDate(),o.classList.add("infoPaneLabel"),o.setAttribute("id","questdueDateInput"),o.addEventListener("change",(function(n){e.changedueDate(this.value)})),t.appendChild(r),t.appendChild(o),infoPane.appendChild(t);let i=B("questDescriptionLabel");i.value=e.getQuestDescription(),i.addEventListener("input",(function(n){e.changeQuestDescription(this.value)})),infoPane.appendChild(i);let a=document.createElement("div");a.classList.add("objectiveContainer"),infoPane.appendChild(a);let A=1;if(e.objectivesArray.forEach((n=>{let t=function(e){let n=document.createElement("input");return n.classList.add("objective"),n.setAttribute("id",e),n.setAttribute("type","text"),n}("ObjectiveDiv"+A);t.value=n.getObjectiveName(),t.addEventListener("input",(function(e){n.changeObjectiveName(this.value)}));let r=document.createElement("button");r.classList.add("deleteObjectiveButton"),t.setAttribute("id","ObjectiveLabel"+A),r.setAttribute("data-index",A),r.innerText="x",r.addEventListener("click",(function(n){for(let n=e.objectivesArray.length;n>0;--n)String(n)===this.getAttribute("data-index")&&(e.objectivesArray.splice(n-1,1),v(infoPane),y(e))})),a.appendChild(t),a.appendChild(r),A++})),e.objectivesArray.length<3){let n=document.createElement("button");n.setAttribute("id","addObjectiveButton"),n.innerText="Add Objective",infoPane.appendChild(n),n.addEventListener("click",(function(){if(v(infoPane),e.objectivesArray.length<3){let n=f("Enter Quest Objective #"+(e.objectivesArray.length+1)+" here...");e.objectivesArray.push(n)}y(e)}))}let c=document.createElement("div"),l=document.createElement("div"),d=document.createElement("div");c.setAttribute("id","priorityDiv"),l.setAttribute("id","priorityLabel"),d.setAttribute("id","priorityButtonDiv"),l.innerText="Priority",c.appendChild(l),c.appendChild(d);let s=document.createElement("div"),u=document.createElement("div");s.setAttribute("id","rewardsDiv"),u.setAttribute("id","rewardsLabel"),u.innerText="Reward: "+e.getXP()+"xp",function(e,n,t){for(let r=0;r<5;r++){let o="button"+String(r),i=document.createElement("button");i.setAttribute("id",o),i.classList.add("priorityButton"),n.getPriority()===String(r+1)&&i.classList.add("priorityButtonSelected"),i.innerText=r+1,e.appendChild(i),i.addEventListener("click",(function(){let e=document.getElementsByClassName("priorityButtonSelected"),r=document.getElementById("tracker");e=Array.from(e),e.forEach((function(e){e.classList.remove("priorityButtonSelected")})),n.changePriority(this.innerText),n.assignXP(),t.innerText="Reward: "+n.getXP()+"xp",i.classList.add("priorityButtonSelected"),h(r),g()}))}}(d,e,u),infoPane.appendChild(c),s.appendChild(u),infoPane.appendChild(s)};!function(){const e=document.createElement("div");e.setAttribute("id","heading");const n=new Image;n.src=C;const t=document.createElement("h1");t.innerText="Quest Log IRL";const r=document.createElement("div");r.setAttribute("id","questCount"),r.innerText="Quests: 0/20",e.appendChild(n),e.appendChild(t),e.appendChild(r),document.body.appendChild(e);const o=document.createElement("div");o.setAttribute("id","container");const i=document.createElement("div"),a=document.createElement("div");i.setAttribute("id","tracker"),a.setAttribute("id","infoPane"),o.appendChild(i),o.appendChild(a),document.body.appendChild(o);const A=document.createElement("div");A.setAttribute("id","buttonBar");const c=document.createElement("div"),l=document.createElement("div");c.setAttribute("id","trackerButtons"),l.setAttribute("id","infoPaneButtons"),document.body.appendChild(c),document.body.appendChild(l),document.body.appendChild(A);const d=document.createElement("button");d.classList.add("buttonBarButton"),d.setAttribute("id","addQuest"),d.innerText="Add Quest";const s=document.createElement("button");s.classList.add("buttonBarButton"),s.setAttribute("id","completeQuest"),s.innerText="Complete Quest",c.appendChild(d),c.appendChild(s),A.appendChild(c),A.appendChild(l)}(),document.getElementById("addQuest").addEventListener("click",(function(e){!function(){document.getElementById("infoPane");let e=document.getElementById("tracker"),n=(document.getElementById("questCount"),((e,n,t,r,o)=>{let i="New Quest Name",a="2022-01-01",A="Enter Quest Description here...",c=[],l=1,d="false",s=!1,u=0;return{getName:()=>i,changeName:function(e){i=e},getQuestdueDate:()=>a,uncompleteQuest:()=>s=!1,completeQuest:()=>s=!0,getObjectives:()=>objectives,getQuestDescription:()=>A,changeQuestDescription:function(e){A=e},assignXP:()=>"1"===l?(u=10*c.length,u):"2"===l?(u=25*c.length,u):"3"===l?(u=50*c.length,u):"4"===l?(u=75*c.length,u):"5"===l?(u=100*c.length,u):void 0,getXP:()=>u,getPriority:()=>l,changePriority:function(e){l=e},changedueDate:function(e){a=e},changeQuestChosen:function(e){d=e},isChosen:()=>d,objectivesArray:c}})());if(b.length<20){b.push(n),h(e),g(),document.getElementById("questCount").innerText="Quests: "+b.length+"/20";let t=f("Enter Quest Objective here...");n.objectivesArray.push(t)}}()})),document.getElementById("completeQuest").addEventListener("click",(function(e){document.getElementById("questDivSelected");for(let e=0;e<b.length;e++)console.log("is quest chosen? "+b[e].isChosen()),"true"===b[e].isChosen()&&(b.splice(e,1),h(tracker),g(),v(infoPane))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBU2hCLGdCQUFnQi9MLEtBQUt3TSxJQXRDOUIrQyxNQUc0QnJLLFNBQVM4RixlQUFlLGlCQUNoQ1AsaUJBQWlCLFNBQVMsU0FBVWpGLEdBQ2hDTixTQUFTOEYsZUFBZSxvQkFHekMsSUFBSyxJQUFJakssRUFBSSxFQUFHQSxFQUFJMkksRUFBVzdJLE9BQVFFLElBQ25DeU8sUUFBUUMsSUFBSSxvQkFBc0IvRixFQUFXM0ksR0FBR3NPLFlBQ2YsU0FBN0IzRixFQUFXM0ksR0FBR3NPLGFBQ2pCM0YsRUFBV3pGLE9BQU9sRCxFQUFHLEdBQ3JCa0ssRUFBWUMsU0FDWmpCLElBQ0FTLEVBQWNDLGUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3F1ZXN0c2lybC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcXVlc3RzaXJsLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vcXVlc3RzaXJsLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vcXVlc3RzaXJsLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3F1ZXN0c2lybC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3F1ZXN0c2lybC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3F1ZXN0c2lybC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vcXVlc3RzaXJsL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vcXVlc3RzaXJsL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3F1ZXN0c2lybC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9zcmMvcXVlc3RzLmpzIiwid2VicGFjazovL3F1ZXN0c2lybC8uL3NyYy9vYmplY3RpdmVzLmpzIiwid2VicGFjazovL3F1ZXN0c2lybC8uL3NyYy9kb21NYW5pcC5qcyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9zcmMvaW5pdGlhbGl6ZVNjcmVlbi5qcyIsIndlYnBhY2s6Ly9xdWVzdHNpcmwvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vQXNzZXRzL0tvbGxla3RpZi50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdLb2xsZWt0aWYnO1xcbiAgICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIikgZm9ybWF0KCd0cnVldHlwZScpO1xcbiAgfSBcXG5cXG5odG1sIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZm9udC1mYW1pbHk6ICdLb2xsZWt0aWYnO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTgxOTFBO1xcbiAgICBjb2xvcjogI0U0RTZFQjtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI2hlYWRpbmcge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG5oMSB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCA1dncgKyAxcmVtLCA1cmVtKTtcXG59XFxuXFxuI2NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGJvcmRlcjogM3B4IHNvbGlkICMyNDI1MjY7XFxuICAgIGhlaWdodDogNzB2aDtcXG59XFxuXFxuI3RyYWNrZXIge1xcbiAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjMjQyNTI2O1xcbiAgICB3aWR0aDogMzMlO1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDJ2dyArIDFyZW0sIDJyZW0pO1xcbn1cXG5cXG4jaW5mb1BhbmUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICMyNDI1MjY7XFxuICAgIHdpZHRoOiA2NyU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI1MjY7XFxuICAgIGdhcDogMTZweDtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAydncgKyAxcmVtLCAycmVtKTsgICAgXFxufSBcXG5cXG4jdHJhY2tlckJ1dHRvbnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDE2cHg7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgbWFyZ2luLXRvcDogNHB4O1xcbn1cXG5cXG4uYnV0dG9uQmFyQnV0dG9uIHtcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgICBib3JkZXItY29sb3I6ICMxODE5MUE7XFxuICAgIHBhZGRpbmc6IDhweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDk5LCAwLCAwKTtcXG4gICAgY29sb3I6ICNmZmM0MDBjYztcXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAydncgKyAxcmVtLCAycmVtKTsgICAgXFxufVxcblxcbi5idXR0b25CYXJCdXR0b246aG92ZXIge1xcbiAgICBib3JkZXI6IHNvbGlkIHJnYig5OSwgMCwgMCkgMnB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTgxOTFBO1xcbn1cXG5cXG4jcXVlc3RDb3VudCB7XFxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcXG59XFxuXFxuLnF1ZXN0RGl2U2VsZWN0ZWQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNTI2O1xcbn1cXG5cXG4jcXVlc3ROYW1lTGFiZWwge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMnZ3ICsgMXJlbSwgMnJlbSk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzQTNCM0M7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cXG4jcXVlc3REZXNjcmlwdGlvbkxhYmVsIHtcXG4gICAgbWFyZ2luLXRvcDogOHB4O1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDF2dyArIDFyZW0sIDEuMjVyZW0pO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0EzQjNDO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG59XFxuXFxuI3F1ZXN0ZHVlRGF0ZUlucHV0IHtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0EzQjNDO1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDF2dyArIDFyZW0sIDEuMjVyZW0pO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxufVxcblxcbiNxdWVzdGR1ZURhdGVMYWJlbCB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAxdncgKyAxcmVtLCAxLjI1cmVtKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNBM0IzQztcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxufVxcblxcbiNhZGRPYmplY3RpdmVCdXR0b24ge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDI1JTtcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTksIDAsIDApO1xcbiAgICBjb2xvcjogI2ZmYzQwMGNjO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMXZ3ICsgMXJlbSwgMS41cmVtKTtcXG4gICAgXFxufVxcblxcbi5wcmlvcml0eUJ1dHRvbi5wcmlvcml0eUJ1dHRvblNlbGVjdGVkIHtcXG4gICAgYm9yZGVyOiBzb2xpZCAycHggeWVsbG93O1xcbn1cXG5cXG4ucHJpb3JpdHlCdXR0b24ge1xcbiAgICB3aWR0aDogMjAlO1xcbiAgICBwYWRkaW5nOiA0cHg7XFxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDF2dyArIDFyZW0sIDEuNXJlbSk7XFxufVxcblxcbiNwcmlvcml0eUxhYmVsIHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4jYnV0dG9uMCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XFxufVxcblxcbiNidXR0b24xIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XFxufVxcblxcbiNidXR0b24yIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDQ3LCAyNTUpO1xcbn1cXG5cXG4jYnV0dG9uMyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHB1cnBsZTtcXG59XFxuXFxuI2J1dHRvbjQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XFxufVxcblxcbi5xdWVzdFByaW9yaXR5MSB7XFxuICAgIGNvbG9yOiBncmV5O1xcbn1cXG5cXG4ucXVlc3RQcmlvcml0eTIge1xcbiAgICBjb2xvcjogZ3JlZW47XFxufVxcblxcbi5xdWVzdFByaW9yaXR5MyB7XFxuICAgIGNvbG9yOiByZ2IoMCwgNDcsIDI1NSk7XFxufVxcblxcbi5xdWVzdFByaW9yaXR5NCB7XFxuICAgIGNvbG9yOiBwdXJwbGU7XFxufVxcblxcbi5xdWVzdFByaW9yaXR5NSB7XFxuICAgIGNvbG9yOiBvcmFuZ2U7XFxufVxcblxcbi5vYmplY3RpdmVDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG5cXG59XFxuXFxuLm9iamVjdGl2ZSB7XFxuICAgIHdpZHRoOiA5NCU7XFxuICAgIG1hcmdpbi10b3A6IDhweDtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAxdncgKyAxcmVtLCAxLjI1cmVtKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNBM0IzQztcXG4gICAgYm9yZGVyOiBub25lOyAgIFxcbn1cXG5cXG4uZGVsZXRlT2JqZWN0aXZlQnV0dG9uIHtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICB3aWR0aDogNSU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig5OSwgMCwgMCk7XFxuICAgIGNvbG9yOiAjZmZjNDAwY2M7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMXZ3ICsgMXJlbSwgMS4yNXJlbSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XFxufVxcblxcbi5kZWxldGVPYmplY3RpdmVCdXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0EzQjNDO1xcbiAgICBjb2xvcjogcmdiKDk5LCAwLCAwKTtcXG59XFxuXFxuaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNTI2O1xcbiAgICBjb2xvcjogI0U0RTZFQjtcXG59XFxuXFxuI3Jld2FyZHNMYWJlbCB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgY29sb3I6IHllbGxvdztcXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XFxuICAgIG1hcmdpbi10b3A6IGNsYW1wKDFyZW0sIDV2dyArIDFyZW0sIDVyZW0pO1xcbn1cXG5cXG5pbWcge1xcbiAgICBtYXJnaW4tbGVmdDogNTBweDtcXG4gICAgaGVpZ2h0OiBjbGFtcCgxcmVtLCA1dncgKyAxcmVtLCAxMHJlbSk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSx3QkFBd0I7SUFDeEIsK0RBQXFEO0VBQ3ZEOztBQUVGO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYix3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsOEJBQThCO0lBQzlCLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLCtCQUErQjtJQUMvQixVQUFVO0lBQ1Ysd0NBQXdDO0FBQzVDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qiw4QkFBOEI7SUFDOUIsVUFBVTtJQUNWLHlCQUF5QjtJQUN6QixTQUFTO0lBQ1Qsd0NBQXdDO0FBQzVDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCwyQkFBMkI7SUFDM0IsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsWUFBWTtJQUNaLCtCQUErQjtJQUMvQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLCtCQUErQjtJQUMvQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4Qyx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZiwyQ0FBMkM7SUFDM0MseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLDJDQUEyQztJQUMzQyxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsMkNBQTJDO0lBQzNDLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsK0JBQStCO0lBQy9CLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osMENBQTBDOztBQUU5Qzs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQiwwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSx3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSx3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLDhCQUE4Qjs7QUFFbEM7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsZUFBZTtJQUNmLDJDQUEyQztJQUMzQyx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixTQUFTO0lBQ1QsK0JBQStCO0lBQy9CLGdCQUFnQjtJQUNoQiwyQ0FBMkM7SUFDM0Msa0JBQWtCO0lBQ2xCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLHlDQUF5QztBQUM3Qzs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixzQ0FBc0M7QUFDMUNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnS29sbGVrdGlmJztcXG4gICAgc3JjOiB1cmwoJy4vQXNzZXRzL0tvbGxla3RpZi50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XFxuICB9IFxcblxcbmh0bWwge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XFxufVxcblxcbmJvZHkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmb250LWZhbWlseTogJ0tvbGxla3RpZic7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxODE5MUE7XFxuICAgIGNvbG9yOiAjRTRFNkVCO1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4jaGVhZGluZyB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbmgxIHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDV2dyArIDFyZW0sIDVyZW0pO1xcbn1cXG5cXG4jY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYm9yZGVyOiAzcHggc29saWQgIzI0MjUyNjtcXG4gICAgaGVpZ2h0OiA3MHZoO1xcbn1cXG5cXG4jdHJhY2tlciB7XFxuICAgIGJvcmRlci1yaWdodDogM3B4IHNvbGlkICMyNDI1MjY7XFxuICAgIHdpZHRoOiAzMyU7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMnZ3ICsgMXJlbSwgMnJlbSk7XFxufVxcblxcbiNpbmZvUGFuZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzI0MjUyNjtcXG4gICAgd2lkdGg6IDY3JTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjUyNjtcXG4gICAgZ2FwOiAxNnB4O1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDJ2dyArIDFyZW0sIDJyZW0pOyAgICBcXG59IFxcblxcbiN0cmFja2VyQnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMTZweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBtYXJnaW4tdG9wOiA0cHg7XFxufVxcblxcbi5idXR0b25CYXJCdXR0b24ge1xcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XFxuICAgIGJvcmRlci1jb2xvcjogIzE4MTkxQTtcXG4gICAgcGFkZGluZzogOHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTksIDAsIDApO1xcbiAgICBjb2xvcjogI2ZmYzQwMGNjO1xcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDJ2dyArIDFyZW0sIDJyZW0pOyAgICBcXG59XFxuXFxuLmJ1dHRvbkJhckJ1dHRvbjpob3ZlciB7XFxuICAgIGJvcmRlcjogc29saWQgcmdiKDk5LCAwLCAwKSAycHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxODE5MUE7XFxufVxcblxcbiNxdWVzdENvdW50IHtcXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xcbn1cXG5cXG4ucXVlc3REaXZTZWxlY3RlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI1MjY7XFxufVxcblxcbiNxdWVzdE5hbWVMYWJlbCB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAydncgKyAxcmVtLCAycmVtKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNBM0IzQztcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxufVxcblxcbiNxdWVzdERlc2NyaXB0aW9uTGFiZWwge1xcbiAgICBtYXJnaW4tdG9wOiA4cHg7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMXZ3ICsgMXJlbSwgMS4yNXJlbSk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzQTNCM0M7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cXG4jcXVlc3RkdWVEYXRlSW5wdXQge1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzQTNCM0M7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMXZ3ICsgMXJlbSwgMS4yNXJlbSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG59XFxuXFxuI3F1ZXN0ZHVlRGF0ZUxhYmVsIHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDF2dyArIDFyZW0sIDEuMjVyZW0pO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0EzQjNDO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG59XFxuXFxuI2FkZE9iamVjdGl2ZUJ1dHRvbiB7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICB3aWR0aDogMjUlO1xcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig5OSwgMCwgMCk7XFxuICAgIGNvbG9yOiAjZmZjNDAwY2M7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAxdncgKyAxcmVtLCAxLjVyZW0pO1xcbiAgICBcXG59XFxuXFxuLnByaW9yaXR5QnV0dG9uLnByaW9yaXR5QnV0dG9uU2VsZWN0ZWQge1xcbiAgICBib3JkZXI6IHNvbGlkIDJweCB5ZWxsb3c7XFxufVxcblxcbi5wcmlvcml0eUJ1dHRvbiB7XFxuICAgIHdpZHRoOiAyMCU7XFxuICAgIHBhZGRpbmc6IDRweDtcXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgMXZ3ICsgMXJlbSwgMS41cmVtKTtcXG59XFxuXFxuI3ByaW9yaXR5TGFiZWwge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbiNidXR0b24wIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcXG59XFxuXFxuI2J1dHRvbjEge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcXG59XFxuXFxuI2J1dHRvbjIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgNDcsIDI1NSk7XFxufVxcblxcbiNidXR0b24zIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcHVycGxlO1xcbn1cXG5cXG4jYnV0dG9uNCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcXG59XFxuXFxuLnF1ZXN0UHJpb3JpdHkxIHtcXG4gICAgY29sb3I6IGdyZXk7XFxufVxcblxcbi5xdWVzdFByaW9yaXR5MiB7XFxuICAgIGNvbG9yOiBncmVlbjtcXG59XFxuXFxuLnF1ZXN0UHJpb3JpdHkzIHtcXG4gICAgY29sb3I6IHJnYigwLCA0NywgMjU1KTtcXG59XFxuXFxuLnF1ZXN0UHJpb3JpdHk0IHtcXG4gICAgY29sb3I6IHB1cnBsZTtcXG59XFxuXFxuLnF1ZXN0UHJpb3JpdHk1IHtcXG4gICAgY29sb3I6IG9yYW5nZTtcXG59XFxuXFxuLm9iamVjdGl2ZUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbn1cXG5cXG4ub2JqZWN0aXZlIHtcXG4gICAgd2lkdGg6IDk0JTtcXG4gICAgbWFyZ2luLXRvcDogOHB4O1xcbiAgICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDF2dyArIDFyZW0sIDEuMjVyZW0pO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0EzQjNDO1xcbiAgICBib3JkZXI6IG5vbmU7ICAgXFxufVxcblxcbi5kZWxldGVPYmplY3RpdmVCdXR0b24ge1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIHdpZHRoOiA1JTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDk5LCAwLCAwKTtcXG4gICAgY29sb3I6ICNmZmM0MDBjYztcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAxdncgKyAxcmVtLCAxLjI1cmVtKTtcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcXG59XFxuXFxuLmRlbGV0ZU9iamVjdGl2ZUJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzQTNCM0M7XFxuICAgIGNvbG9yOiByZ2IoOTksIDAsIDApO1xcbn1cXG5cXG5pbnB1dCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI1MjY7XFxuICAgIGNvbG9yOiAjRTRFNkVCO1xcbn1cXG5cXG4jcmV3YXJkc0xhYmVsIHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBjb2xvcjogeWVsbG93O1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcXG4gICAgbWFyZ2luLXRvcDogY2xhbXAoMXJlbSwgNXZ3ICsgMXJlbSwgNXJlbSk7XFxufVxcblxcbmltZyB7XFxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xcbiAgICBoZWlnaHQ6IGNsYW1wKDFyZW0sIDV2dyArIDFyZW0sIDEwcmVtKTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9vYmplY3RpdmVzLmpzJztcblxuY29uc3QgUXVlc3QgPSAobmFtZSwgZHVlRGF0ZSwgZGVzY3JpcHRpb24sIHByaW9yaXR5LCBjaG9zZW4pID0+IHtcbiAgICBsZXQgcXVlc3ROYW1lID0gbmFtZTtcbiAgICBsZXQgcXVlc3RkdWVEYXRlID0gZHVlRGF0ZTtcbiAgICBsZXQgcXVlc3REZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIGxldCBvYmplY3RpdmVzQXJyYXkgPSBbXTtcbiAgICBsZXQgcXVlc3RQcmlvcml0eSA9IHByaW9yaXR5O1xuICAgIGxldCBxdWVzdENob3NlbiA9IGNob3NlbjtcbiAgICBcbiAgICAvL2FkZCBpc1NlbGVjdGVkIHN0dWZmXG4gICAgY29uc3QgZ2V0TmFtZSA9ICgpID0+IHF1ZXN0TmFtZTtcbiAgICBjb25zdCBpc0Nob3NlbiA9ICgpID0+IHF1ZXN0Q2hvc2VuO1xuICAgIGNvbnN0IGdldFF1ZXN0ZHVlRGF0ZSA9ICgpID0+IHF1ZXN0ZHVlRGF0ZTtcbiAgICBjb25zdCBnZXRPYmplY3RpdmVzID0gKCkgPT4gb2JqZWN0aXZlcztcbiAgICBjb25zdCBnZXRRdWVzdERlc2NyaXB0aW9uID0gKCkgPT4gcXVlc3REZXNjcmlwdGlvbjtcbiAgICBjb25zdCBnZXRQcmlvcml0eSA9ICgpID0+IHF1ZXN0UHJpb3JpdHk7XG4gICAgY29uc3QgY2hhbmdlUHJpb3JpdHkgPSBmdW5jdGlvbiAoYXJnUHJpb3JpdHkpe1xuICAgICAgICBxdWVzdFByaW9yaXR5ID0gYXJnUHJpb3JpdHk7ICAgIFxuICAgIH1cbiAgICBjb25zdCBjaGFuZ2VkdWVEYXRlID0gZnVuY3Rpb24gKGFyZ0RhdGUpe1xuICAgICAgICBxdWVzdGR1ZURhdGUgPSBhcmdEYXRlOyAgICBcbiAgICB9XG4gICAgY29uc3QgY2hhbmdlUXVlc3REZXNjcmlwdGlvbiA9IGZ1bmN0aW9uIChhcmdEZXNjcmlwdGlvbil7XG4gICAgICAgIHF1ZXN0RGVzY3JpcHRpb24gPSBhcmdEZXNjcmlwdGlvbjsgICBcbiAgICB9XG4gICAgY29uc3QgY2hhbmdlTmFtZSA9IGZ1bmN0aW9uIChhcmdOYW1lKXtcbiAgICAgICAgcXVlc3ROYW1lID0gYXJnTmFtZTsgICAgXG4gICAgfVxuICAgIGNvbnN0IGNoYW5nZVF1ZXN0Q2hvc2VuID0gZnVuY3Rpb24gKGFyZ05hbWUpe1xuICAgICAgICBxdWVzdENob3NlbiA9IGFyZ05hbWU7ICAgIFxuICAgIH1cbiAgICBcbiAgICBsZXQgaXNDb21wbGV0ZSA9IGZhbHNlO1xuICAgIGxldCBleHBlcmllbmNlUG9pbnRzID0gMDtcbiAgICBcbiAgICBjb25zdCBhc3NpZ25YUCA9ICgpID0+IHtcbiAgICAgICAgaWYgKHF1ZXN0UHJpb3JpdHkgPT09ICcxJykge1xuICAgICAgICAgICAgZXhwZXJpZW5jZVBvaW50cyA9ICgxMCAqIG9iamVjdGl2ZXNBcnJheS5sZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGV4cGVyaWVuY2VQb2ludHM7XG4gICAgICAgIH1lbHNlIGlmIChxdWVzdFByaW9yaXR5ID09PSAnMicpIHtcbiAgICAgICAgICAgIGV4cGVyaWVuY2VQb2ludHMgPSAoMjUgKiBvYmplY3RpdmVzQXJyYXkubGVuZ3RoKTtcbiAgICAgICAgICAgIHJldHVybiBleHBlcmllbmNlUG9pbnRzO1xuICAgICAgICB9ZWxzZSBpZiAocXVlc3RQcmlvcml0eSA9PT0gJzMnKSB7XG4gICAgICAgICAgICBleHBlcmllbmNlUG9pbnRzID0gKDUwICogb2JqZWN0aXZlc0FycmF5Lmxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm4gZXhwZXJpZW5jZVBvaW50cztcbiAgICAgICAgfWVsc2UgaWYgKHF1ZXN0UHJpb3JpdHkgPT09ICc0Jykge1xuICAgICAgICAgICAgZXhwZXJpZW5jZVBvaW50cyA9ICg3NSAqIG9iamVjdGl2ZXNBcnJheS5sZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGV4cGVyaWVuY2VQb2ludHM7XG4gICAgICAgIH1lbHNlIGlmIChxdWVzdFByaW9yaXR5ID09PSAnNScpIHtcbiAgICAgICAgICAgIGV4cGVyaWVuY2VQb2ludHMgPSAoMTAwICogb2JqZWN0aXZlc0FycmF5Lmxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm4gZXhwZXJpZW5jZVBvaW50cztcbiAgICAgICAgfWVsc2UgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGdldFhQID0gKCkgPT4gZXhwZXJpZW5jZVBvaW50cztcblxuICAgIC8vdG8gY2hlY2sgaWYgcXVlc3QgaXMgY29tcGxldGUsIGNoZWNrIGlzQ29tcGxldGUgdGFncyBvZiBhbGwgb2JqZWN0aXZlc1xuXG4gICAgY29uc3QgY29tcGxldGVRdWVzdCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGlzQ29tcGxldGUgPSB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IHVuY29tcGxldGVRdWVzdCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGlzQ29tcGxldGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge2dldE5hbWUsIGNoYW5nZU5hbWUsIGdldFF1ZXN0ZHVlRGF0ZSwgdW5jb21wbGV0ZVF1ZXN0LCBjb21wbGV0ZVF1ZXN0LCBnZXRPYmplY3RpdmVzLCBnZXRRdWVzdERlc2NyaXB0aW9uLCBjaGFuZ2VRdWVzdERlc2NyaXB0aW9uLCBhc3NpZ25YUCwgZ2V0WFAsIGdldFByaW9yaXR5LCBjaGFuZ2VQcmlvcml0eSwgY2hhbmdlZHVlRGF0ZSwgY2hhbmdlUXVlc3RDaG9zZW4sIGlzQ2hvc2VuLCBvYmplY3RpdmVzQXJyYXl9XG59O1xuZXhwb3J0IHtRdWVzdH07XG5cblxuXG4iLCIgLy9jcmVhdGUgb2JqZWN0aXZlcyBmYWN0b3J5IGZ1bmN0aW9uXG4gY29uc3QgT2JqZWN0aXZlID0gKG5hbWUpID0+IHtcbiAgICBsZXQgb2JqZWN0aXZlTmFtZSA9IG5hbWU7XG4gICAgY29uc3QgZ2V0T2JqZWN0aXZlTmFtZSA9ICgpID0+IG9iamVjdGl2ZU5hbWU7XG4gICAgbGV0IGlzQ29tcGxldGUgPSBmYWxzZTtcbiAgICBcbiAgICBjb25zdCBjaGFuZ2VPYmplY3RpdmVOYW1lID0gZnVuY3Rpb24gKGFyZ0RhdGUpe1xuICAgICAgICBvYmplY3RpdmVOYW1lID0gYXJnRGF0ZTsgICAgXG4gICAgfVxuICAgIGNvbnN0IGNvbXBsZXRlT2JqZWN0aXZlID0gKCkgPT4ge1xuICAgICAgICBpc0NvbXBsZXRlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBpbmNvbXBsZXRlT2JqZWN0aXZlID0gKCkgPT4ge1xuICAgICAgICBpc0NvbXBsZXRlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtnZXRPYmplY3RpdmVOYW1lLCBjb21wbGV0ZU9iamVjdGl2ZSwgaW5jb21wbGV0ZU9iamVjdGl2ZSwgY2hhbmdlT2JqZWN0aXZlTmFtZX1cbiB9O1xuIGV4cG9ydCB7T2JqZWN0aXZlfTtcblxuIiwiLy9jbGljayBDcmVhdGUgUXVlc3RcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0ICcuL29iamVjdGl2ZXMuanMnO1xuaW1wb3J0IHsgUXVlc3QgfSBmcm9tICcuL3F1ZXN0cy5qcyc7XG5pbXBvcnQgeyBPYmplY3RpdmUgfSBmcm9tICcuL29iamVjdGl2ZXMuanMnO1xuXG5cbi8vY3JlYXRlIFF1ZXN0QXJyYXlcbmxldCBxdWVzdEFycmF5ID0gbmV3IEFycmF5KCk7XG5cbmNvbnN0IGFkZExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAvL2NsaWNrIENyZWF0ZSBRdWVzdFxuICAgIGNvbnN0IGFkZFF1ZXN0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZFF1ZXN0Jyk7XG4gICAgYWRkUXVlc3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGFkZFF1ZXN0KCk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBjb21wbGV0ZVF1ZXN0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbXBsZXRlUXVlc3QnKTtcbiAgICBjb21wbGV0ZVF1ZXN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbGV0IHNlbGVjdGVkUXVlc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVlc3REaXZTZWxlY3RlZCcpO1xuICAgICAgICAgICAgLy9yZW1vdmUgcXVlc3QgZnJvbSBxdWVzdCBhcnJheVxuICAgICAgICAgICAvL3RvIGRvOiBsb29wIHRocm91Z2ggcXVlc3RBcnJheSB0byBzZWUgd2hpY2ggb25lIGlzIHNlbGVjdGVkXG4gICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcXVlc3RBcnJheS5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICBjb25zb2xlLmxvZygnaXMgcXVlc3QgY2hvc2VuPyAnICsgcXVlc3RBcnJheVtpXS5pc0Nob3NlbigpKTtcbiAgICAgICAgICAgICAgIGlmIChxdWVzdEFycmF5W2ldLmlzQ2hvc2VuKCkgPT09ICd0cnVlJyl7XG4gICAgICAgICAgICAgICAgcXVlc3RBcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgY2xlYXJRdWVzdHModHJhY2tlcik7XG4gICAgICAgICAgICAgICAgZGlzcGxheVF1ZXN0cygpO1xuICAgICAgICAgICAgICAgIGNsZWFyaW5mb1BhbmUoaW5mb1BhbmUpO1xuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICB9XG4gICAgICAgICAgIFxuICAgIH0pO1xufVxuXG5sZXQgYWRkUXVlc3QgPSBmdW5jdGlvbigpIHtcbiAgICBsZXQgaW5mb1BhbmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5mb1BhbmUnKTtcbiAgICBsZXQgdHJhY2tlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0cmFja2VyJyk7XG4gICAgbGV0IHF1ZXN0Q291bnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVlc3RDb3VudCcpO1xuICAgIC8vcHVzaCBwcm90byBxdWVzdCB0byBRdWVzdEFycmF5XG4gICAgbGV0IG5ld1F1ZXN0ID0gUXVlc3QoJ05ldyBRdWVzdCBOYW1lJywgJzIwMjItMDEtMDEnLCAnRW50ZXIgUXVlc3QgRGVzY3JpcHRpb24gaGVyZS4uLicsIDEsICdmYWxzZScpO1xuICAgIFxuICAgIGlmIChxdWVzdEFycmF5Lmxlbmd0aCA8IDIwKSB7XG4gICAgcXVlc3RBcnJheS5wdXNoKG5ld1F1ZXN0KTtcbiAgICAvL3JlZnJlc2ggdHJhY2tlciBhbmQgY3JlYXRlIHF1ZXN0IGRpdiB3aXRoIHF1ZXN0IG5hbWVcbiAgICBjbGVhclF1ZXN0cyh0cmFja2VyKTtcbiAgICBkaXNwbGF5UXVlc3RzKCk7XG4gICAgLy91cGRhdGUgUXVlc3QgQ291bnQgaW4gdXBwZXIgcmlnaHQgaGFuZCBjb3JuZXJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVlc3RDb3VudCcpLmlubmVyVGV4dCA9ICdRdWVzdHM6ICcgKyBxdWVzdEFycmF5Lmxlbmd0aCArJy8yMCc7XG4gICAgXG4gICAgLy9jcmVhdGUgZGVmYXVsdCBvYmplY3RpdmUgICBcbiAgICBsZXQgbmV3T2JqZWN0aXZlID0gT2JqZWN0aXZlKCdFbnRlciBRdWVzdCBPYmplY3RpdmUgaGVyZS4uLicsICcyMDIyLTAxLTAxJyk7XG4gICAgbmV3UXVlc3Qub2JqZWN0aXZlc0FycmF5LnB1c2gobmV3T2JqZWN0aXZlKTsgIFxuICAgICAgICBcbiAgICB9ICBcbn07XG5cbmNvbnN0IGxhYmVsTWFrZXIgPSBmdW5jdGlvbiAobGFiZWxNYWtlck5hbWUpIHtcbiAgICBsZXQgbGFiZWxOYW1lID0gbGFiZWxNYWtlck5hbWU7XG4gICAgbGFiZWxOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBsYWJlbE5hbWUuY2xhc3NMaXN0LmFkZCgnaW5mb1BhbmVMYWJlbCcpO1xuICAgIGxhYmVsTmFtZS5zZXRBdHRyaWJ1dGUoJ2lkJyxsYWJlbE1ha2VyTmFtZSk7XG4gICAgbGFiZWxOYW1lLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgcmV0dXJuIGxhYmVsTmFtZTsgICBcbn1cblxuY29uc3QgY3JlYXRlT2JqZWN0aXZlTGFiZWwgPSBmdW5jdGlvbiAob2JqZWN0aXZlTnVtYmVyKSB7XG4gICAgbGV0IG9iamVjdGl2ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBvYmplY3RpdmVMYWJlbC5jbGFzc0xpc3QuYWRkKCdvYmplY3RpdmUnKTtcbiAgICBvYmplY3RpdmVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2lkJyxvYmplY3RpdmVOdW1iZXIpO1xuICAgIG9iamVjdGl2ZUxhYmVsLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgXG4gICAgcmV0dXJuIG9iamVjdGl2ZUxhYmVsO1xufSBcblxuY29uc3QgY3JlYXRlUHJpb3JpdHlCdXR0b25zID0gZnVuY3Rpb24gKHByaW9yaXR5QnV0dG9uRGl2LCBuZXdRdWVzdCwgcmV3YXJkc0xhYmVsKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspe1xuICAgICAgICBsZXQgaVN0cmluZyA9ICdidXR0b24nICsgU3RyaW5nKGkpO1xuICAgICAgICBsZXQgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgaVN0cmluZyk7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdwcmlvcml0eUJ1dHRvbicpO1xuXG4gICAgICAgIGlmIChuZXdRdWVzdC5nZXRQcmlvcml0eSgpID09PSBTdHJpbmcoKGkrMSkpKXtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdwcmlvcml0eUJ1dHRvblNlbGVjdGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgYnV0dG9uLmlubmVyVGV4dCA9IChpICsgMSk7XG4gICAgICAgIHByaW9yaXR5QnV0dG9uRGl2LmFwcGVuZENoaWxkKGJ1dHRvbik7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBsZXQgcHJpb3JpdHlCdXR0b25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncHJpb3JpdHlCdXR0b25TZWxlY3RlZCcpO1xuICAgICAgICAgICAgbGV0IHRyYWNrZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHJhY2tlcicpO1xuICAgICAgICAgICAgcHJpb3JpdHlCdXR0b25zID0gQXJyYXkuZnJvbShwcmlvcml0eUJ1dHRvbnMpO1xuICAgICAgICAgICAgcHJpb3JpdHlCdXR0b25zLmZvckVhY2goZnVuY3Rpb24oYnV0dG9uKXtcbiAgICAgICAgICAgICAgICBidXR0b24uY2xhc3NMaXN0LnJlbW92ZSgncHJpb3JpdHlCdXR0b25TZWxlY3RlZCcpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIG5ld1F1ZXN0LmNoYW5nZVByaW9yaXR5KHRoaXMuaW5uZXJUZXh0KTtcbiAgICAgICAgICAgIG5ld1F1ZXN0LmFzc2lnblhQKCk7XG4gICAgICAgICAgICByZXdhcmRzTGFiZWwuaW5uZXJUZXh0ID0gJ1Jld2FyZDogJyArIG5ld1F1ZXN0LmdldFhQKCkgKyAneHAnO1xuICAgICAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5QnV0dG9uU2VsZWN0ZWQnKTtcbiAgICAgICAgICAgIGNsZWFyUXVlc3RzKHRyYWNrZXIpO1xuICAgICAgICAgICAgZGlzcGxheVF1ZXN0cygpO1xuICAgICAgICB9KVxuICAgIH1cbn1cblxuY29uc3QgZGlzcGxheVF1ZXN0cyA9IGZ1bmN0aW9uKCl7XG4gICAgXG4gICAgcXVlc3RBcnJheS5mb3JFYWNoKHF1ZXN0ID0+IHtcbiAgICAgICAgcXVlc3QuY2hhbmdlUXVlc3RDaG9zZW4oJ2ZhbHNlJyk7XG4gICAgICAgIFxuICAgICAgICBsZXQgcXVlc3REaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcXVlc3REaXYuY2xhc3NMaXN0LmFkZCgncXVlc3REaXYnKTtcbiAgICAgICAgLy90b2dnbGUgY2xhc3Mgb2YgcXVlc3REaXYgYmFzZWQgb24gcXVlc3QgcHJpb3JpdHlcbiAgICAgICAgaWYgKHF1ZXN0LmdldFByaW9yaXR5KCkgPD0gJzEnKXtcbiAgICAgICAgICAgIHF1ZXN0RGl2LmNsYXNzTGlzdC5hZGQoJ3F1ZXN0UHJpb3JpdHkxJyk7XG4gICAgICAgIH0gZWxzZSBpZiAocXVlc3QuZ2V0UHJpb3JpdHkoKSA9PT0gJzInKXtcbiAgICAgICAgICAgIHF1ZXN0RGl2LmNsYXNzTGlzdC5hZGQoJ3F1ZXN0UHJpb3JpdHkyJyk7XG4gICAgICAgIH0gZWxzZSBpZiAocXVlc3QuZ2V0UHJpb3JpdHkoKSA9PT0gJzMnKXtcbiAgICAgICAgICAgIHF1ZXN0RGl2LmNsYXNzTGlzdC5hZGQoJ3F1ZXN0UHJpb3JpdHkzJylcbiAgICAgICAgfSBlbHNlIGlmIChxdWVzdC5nZXRQcmlvcml0eSgpID09PSAnNCcpe1xuICAgICAgICAgICAgcXVlc3REaXYuY2xhc3NMaXN0LmFkZCgncXVlc3RQcmlvcml0eTQnKVxuICAgICAgICB9IGVsc2UgaWYgKHF1ZXN0LmdldFByaW9yaXR5KCkgPT09ICc1Jyl7XG4gICAgICAgICAgICBxdWVzdERpdi5jbGFzc0xpc3QuYWRkKCdxdWVzdFByaW9yaXR5NScpXG4gICAgICAgIH0gICAgICAgICAgIFxuICAgICAgICBxdWVzdERpdi5pbm5lclRleHQgPSBxdWVzdC5nZXROYW1lKCk7XG4gICAgICAgIC8vYWRkIGV2ZW50IGhhbmRsZXIgYWxsb3dpbmcgZm9yIHNlbGVjdGlvbiBhbmQgZGlzcGxheSBvZiBxdWVzdCBjb250ZW50c1xuICAgICAgICBxdWVzdERpdi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIC8vY2xlYXIgaW5mb1BhbmVcbiAgICAgICAgICAgIGNsZWFyaW5mb1BhbmUoaW5mb1BhbmUpO1xuICAgICAgICAgICAgLy9yZXBvcHVsYXRlIGluZm9QYW5lIHdpdGggcXVlc3QgaW5mb3JtYXRpb25cbiAgICAgICAgICAgIHBvcHVsYXRlUXVlc3QocXVlc3QpO1xuICAgICAgICAgICAgLy9sb29wIHRocm91Z2ggcXVlc3REaXZzIGFuZCByZW1vdmUgU2VsZWN0ZWQgY2xhc3NcbiAgICAgICAgICAgIGxldCBxdWVzdERpdnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdxdWVzdERpdicpO1xuICAgICAgICAgICAgbGV0IHF1ZXN0RGl2c0FycmF5ID0gQXJyYXkuZnJvbShxdWVzdERpdnMpO1xuICAgICAgICAgICAgcXVlc3REaXZzQXJyYXkuZm9yRWFjaChmdW5jdGlvbihxdWVzdERpdil7XG4gICAgICAgICAgICAgICAgcXVlc3REaXYuY2xhc3NMaXN0LnJlbW92ZSgncXVlc3REaXZTZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBxdWVzdERpdi5jbGFzc0xpc3QuYWRkKCdxdWVzdERpdlNlbGVjdGVkJyk7XG4gICAgICAgICAgICBxdWVzdC5jaGFuZ2VRdWVzdENob3NlbigndHJ1ZScpO1xuICAgICAgICB9KVxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyYWNrZXJcIikuYXBwZW5kQ2hpbGQocXVlc3REaXYpOyAgICAgICBcbiAgICB9KVxufVxuXG5jb25zdCBjbGVhclF1ZXN0cyA9IGZ1bmN0aW9uKHRyYWNrZXIpe1xuICAgIHdoaWxlICh0cmFja2VyLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgdHJhY2tlci5yZW1vdmVDaGlsZCh0cmFja2VyLmZpcnN0Q2hpbGQpO1xuICAgIH0gcmV0dXJuO1xufVxuXG5jb25zdCBjbGVhcmluZm9QYW5lID0gZnVuY3Rpb24oaW5mb1BhbmUpe1xuICAgIHdoaWxlIChpbmZvUGFuZS5maXJzdENoaWxkKSB7XG4gICAgICAgIGluZm9QYW5lLnJlbW92ZUNoaWxkKGluZm9QYW5lLmZpcnN0Q2hpbGQpO1xuICAgIH1cbn1cbiAgICBcbmNvbnN0IHBvcHVsYXRlUXVlc3QgPSBmdW5jdGlvbihxdWVzdCl7XG4gICAgLy9jcmVhdGUgUXVlc3QgTmFtZSBMYWJlbFxuICAgIGxldCBxdWVzdE5hbWVMYWJlbCA9IGxhYmVsTWFrZXIoJ3F1ZXN0TmFtZUxhYmVsJyk7XG4gICAgcXVlc3ROYW1lTGFiZWwudmFsdWUgPSBxdWVzdC5nZXROYW1lKCk7XG4gICAgcXVlc3ROYW1lTGFiZWwuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBmdW5jdGlvbihlKXtcbiAgICAgICAgcXVlc3QuY2hhbmdlTmFtZSh0aGlzLnZhbHVlKTtcbiAgICB9KVxuICAgIGluZm9QYW5lLmFwcGVuZENoaWxkKHF1ZXN0TmFtZUxhYmVsKTtcbiAgICBcbiAgICAvL2NyZWF0ZSBkdWUgRGF0ZSBsYWJlbFxuICAgIGxldCBxdWVzdGR1ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHF1ZXN0ZHVlRGl2LmNsYXNzTGlzdC5hZGQoJ3F1ZXN0ZHVlRGl2Jyk7XG4gICAgbGV0IHF1ZXN0ZHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBxdWVzdGR1ZURhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdxdWVzdGR1ZURhdGVJbnB1dCcpO1xuICAgIHF1ZXN0ZHVlRGF0ZUxhYmVsLmlubmVyVGV4dCA9IFwiUXVlc3QgQ29tcGxldGlvbiBEdWUgYnk6IFwiXG4gICAgbGV0IHF1ZXN0ZHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBxdWVzdGR1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCdkYXRlJyk7XG4gICAgcXVlc3RkdWVEYXRlSW5wdXQudmFsdWUgPSBxdWVzdC5nZXRRdWVzdGR1ZURhdGUoKTtcbiAgICBxdWVzdGR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdpbmZvUGFuZUxhYmVsJyk7XG4gICAgcXVlc3RkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsJ3F1ZXN0ZHVlRGF0ZUlucHV0Jyk7XG4gICAgcXVlc3RkdWVEYXRlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24oZSl7XG4gICAgICAgIHF1ZXN0LmNoYW5nZWR1ZURhdGUodGhpcy52YWx1ZSk7XG4gICAgfSlcbiAgICBxdWVzdGR1ZURpdi5hcHBlbmRDaGlsZChxdWVzdGR1ZURhdGVMYWJlbCk7XG4gICAgcXVlc3RkdWVEaXYuYXBwZW5kQ2hpbGQocXVlc3RkdWVEYXRlSW5wdXQpO1xuICAgIGluZm9QYW5lLmFwcGVuZENoaWxkKHF1ZXN0ZHVlRGl2KTtcblxuICAgIC8vY3JlYXRlIFF1ZXN0IERlc2NyaXB0aW9uIExhYmVsIFxuICAgIGxldCBxdWVzdERlc2NyaXB0aW9uTGFiZWwgPSBsYWJlbE1ha2VyKCdxdWVzdERlc2NyaXB0aW9uTGFiZWwnKTtcbiAgICBxdWVzdERlc2NyaXB0aW9uTGFiZWwudmFsdWUgPSBxdWVzdC5nZXRRdWVzdERlc2NyaXB0aW9uKCk7XG4gICAgcXVlc3REZXNjcmlwdGlvbkxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgZnVuY3Rpb24oZSl7XG4gICAgICAgIHF1ZXN0LmNoYW5nZVF1ZXN0RGVzY3JpcHRpb24odGhpcy52YWx1ZSk7XG4gICAgfSlcbiAgICBpbmZvUGFuZS5hcHBlbmRDaGlsZChxdWVzdERlc2NyaXB0aW9uTGFiZWwpO1xuXG4gICAgLy9jb250YWluZXIgdG8gaG9sZCBvYmplY3RpdmVzXG4gICAgbGV0IG9iamVjdGl2ZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG9iamVjdGl2ZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdvYmplY3RpdmVDb250YWluZXInKTtcbiAgICBpbmZvUGFuZS5hcHBlbmRDaGlsZChvYmplY3RpdmVDb250YWluZXIpO1xuXG4gICAgbGV0IGsgPSAxO1xuICAgIC8vY3JlYXRlIHF1ZXN0IG9iamVjdGl2ZXNcbiAgICBxdWVzdC5vYmplY3RpdmVzQXJyYXkuZm9yRWFjaChvYmplY3RpdmUgPT4ge1xuICAgICAgICBcbiAgICAgICAgbGV0IG9iamVjdGl2ZUxhYmVsID0gY3JlYXRlT2JqZWN0aXZlTGFiZWwoJ09iamVjdGl2ZURpdicgKyBrKTsgXG4gICAgICAgIG9iamVjdGl2ZUxhYmVsLnZhbHVlID0gb2JqZWN0aXZlLmdldE9iamVjdGl2ZU5hbWUoKTtcbiAgICAgICAgb2JqZWN0aXZlTGFiZWwuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgIG9iamVjdGl2ZS5jaGFuZ2VPYmplY3RpdmVOYW1lKHRoaXMudmFsdWUpO1xuICAgICAgICB9KVxuXG4gICAgICAgICAvL2NyZWF0ZSBkZWxldGUgb2JqZWN0aXZlIGJ1dHRvbiBmb3IgZWFjaCBvYmplY3RpdmVcbiAgICAgICAgbGV0IGRlbGV0ZU9iamVjdGl2ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBkZWxldGVPYmplY3RpdmVCdXR0b24uY2xhc3NMaXN0LmFkZCgnZGVsZXRlT2JqZWN0aXZlQnV0dG9uJyk7XG4gICAgICAgIG9iamVjdGl2ZUxhYmVsLnNldEF0dHJpYnV0ZSgnaWQnLCdPYmplY3RpdmVMYWJlbCcgKyBrKTtcbiAgICAgICAgZGVsZXRlT2JqZWN0aXZlQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGF0YS1pbmRleCcsIGspXG4gICAgICAgIGRlbGV0ZU9iamVjdGl2ZUJ1dHRvbi5pbm5lclRleHQgPSAneCc7ICAgIFxuICAgICAgICBcblxuICAgICAgICAvL2FkZCBldmVudCBsaXN0ZW5lciBmb3IgZGVsZXRlIG9iamVjdGl2ZSBidXR0b25cbiAgICAgICAgZGVsZXRlT2JqZWN0aXZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vcmVtb3ZlIG9iamVjdGl2ZSBmcm9tIHF1ZXN0IG9iamVjdGl2ZSBhcnJheVxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IHF1ZXN0Lm9iamVjdGl2ZXNBcnJheS5sZW5ndGg7IGogPiAwOyAtLWope1xuICAgICAgICAgICAgICAgIGlmIChTdHJpbmcoaikgPT09IHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLWluZGV4JykpIHtcbiAgICAgICAgICAgICAgICAgICAgcXVlc3Qub2JqZWN0aXZlc0FycmF5LnNwbGljZSgoai0xKSwxKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJpbmZvUGFuZShpbmZvUGFuZSk7XG4gICAgICAgICAgICAgICAgICAgIHBvcHVsYXRlUXVlc3QocXVlc3QpO1xuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICBvYmplY3RpdmVDb250YWluZXIuYXBwZW5kQ2hpbGQob2JqZWN0aXZlTGFiZWwpO1xuICAgICAgICBvYmplY3RpdmVDb250YWluZXIuYXBwZW5kQ2hpbGQoZGVsZXRlT2JqZWN0aXZlQnV0dG9uKTsgIFxuICAgICAgICBrKys7ICBcbiAgICB9KVxuICAgICAgICAgICAgXG4gICAgLy9idXR0b24gdG8gYWRkIG9iamVjdGl2ZVxuICAgIFxuICAgIGlmIChxdWVzdC5vYmplY3RpdmVzQXJyYXkubGVuZ3RoIDwgMykge1xuICAgIGxldCBhZGRPYmplY3RpdmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBhZGRPYmplY3RpdmVCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdhZGRPYmplY3RpdmVCdXR0b24nKTtcbiAgICBhZGRPYmplY3RpdmVCdXR0b24uaW5uZXJUZXh0ID0gJ0FkZCBPYmplY3RpdmUnO1xuICAgIGluZm9QYW5lLmFwcGVuZENoaWxkKGFkZE9iamVjdGl2ZUJ1dHRvbik7XG4gICAgLy9hZGQgZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBhZGQgb2JqZWN0aXZlIGJ1dHRvblxuICAgIGFkZE9iamVjdGl2ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIGNsZWFyaW5mb1BhbmUoaW5mb1BhbmUpO1xuICAgICAgICBpZiAocXVlc3Qub2JqZWN0aXZlc0FycmF5Lmxlbmd0aCA8IDMpIHtcbiAgICAgICAgICAgIGxldCBuZXdPYmplY3RpdmUgPSBPYmplY3RpdmUoJ0VudGVyIFF1ZXN0IE9iamVjdGl2ZSAjJyArICgocXVlc3Qub2JqZWN0aXZlc0FycmF5Lmxlbmd0aCkgKyAxKSArICAnIGhlcmUuLi4nKTtcbiAgICAgICAgICAgIHF1ZXN0Lm9iamVjdGl2ZXNBcnJheS5wdXNoKG5ld09iamVjdGl2ZSk7XG4gICAgICAgIH1cbiAgICAgICAgICAgIC8vcmVwb3B1bGF0ZSBpbmZvUGFuZSB3aXRoIHF1ZXN0IGluZm9ybWF0aW9uXG4gICAgICAgIHBvcHVsYXRlUXVlc3QocXVlc3QpO1xuICAgICAgICBcbiAgICB9KSAgICBcbiAgICB9XG4gICAgXG4gICAgLy9jcmVhdGUgcHJpb3JpdHkgYnV0dG9uc1xuICAgIGxldCBwcmlvcml0eURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxldCBwcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGV0IHByaW9yaXR5QnV0dG9uRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcHJpb3JpdHlEaXYuc2V0QXR0cmlidXRlKCdpZCcsICdwcmlvcml0eURpdicpO1xuICAgIHByaW9yaXR5TGFiZWwuc2V0QXR0cmlidXRlKCdpZCcsJ3ByaW9yaXR5TGFiZWwnKTtcbiAgICBwcmlvcml0eUJ1dHRvbkRpdi5zZXRBdHRyaWJ1dGUoJ2lkJywncHJpb3JpdHlCdXR0b25EaXYnKTtcbiAgICBwcmlvcml0eUxhYmVsLmlubmVyVGV4dCA9IFwiUHJpb3JpdHlcIjtcbiAgICBwcmlvcml0eURpdi5hcHBlbmRDaGlsZChwcmlvcml0eUxhYmVsKTtcbiAgICBwcmlvcml0eURpdi5hcHBlbmRDaGlsZChwcmlvcml0eUJ1dHRvbkRpdik7XG4gICAgXG4gICAgLy9zaG93IHJld2FyZHMgeHBcbiAgICBsZXQgcmV3YXJkc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxldCByZXdhcmRzTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByZXdhcmRzRGl2LnNldEF0dHJpYnV0ZSgnaWQnLCAncmV3YXJkc0RpdicpO1xuICAgIHJld2FyZHNMYWJlbC5zZXRBdHRyaWJ1dGUoJ2lkJywncmV3YXJkc0xhYmVsJyk7XG4gICAgcmV3YXJkc0xhYmVsLmlubmVyVGV4dCA9ICdSZXdhcmQ6ICcgKyBxdWVzdC5nZXRYUCgpICsgJ3hwJztcbiAgICAvL2J1dHRvbnMgcmVsaWFudCB1cG9uIHJld2FyZHNMYWJlbFxuICAgIGNyZWF0ZVByaW9yaXR5QnV0dG9ucyhwcmlvcml0eUJ1dHRvbkRpdiwgcXVlc3QsIHJld2FyZHNMYWJlbCk7XG4gICAgaW5mb1BhbmUuYXBwZW5kQ2hpbGQocHJpb3JpdHlEaXYpO1xuICAgIHJld2FyZHNEaXYuYXBwZW5kQ2hpbGQocmV3YXJkc0xhYmVsKTsgXG4gICAgaW5mb1BhbmUuYXBwZW5kQ2hpbGQocmV3YXJkc0Rpdik7XG4gICAgICAgIFxufVxuXG5leHBvcnQge2FkZExpc3RlbmVyc307XG5cbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IGxvZ28gZnJvbSAnLi9Bc3NldHMvbG9nby5wbmcnO1xuXG5mdW5jdGlvbiBpbml0aWFsaXplU2NyZWVuKCkge1xuLy9jcmVhdGUgaGVhZGVyXG5jb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmhlYWRlci5zZXRBdHRyaWJ1dGUoJ2lkJyxcImhlYWRpbmdcIik7XG5jb25zdCBoZWFkaW5nSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbmhlYWRpbmdJbWFnZS5zcmMgPSBsb2dvO1xuY29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG5oZWFkaW5nLmlubmVyVGV4dCA9ICdRdWVzdCBMb2cgSVJMJztcbmNvbnN0IHF1ZXN0Q291bnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbnF1ZXN0Q291bnQuc2V0QXR0cmlidXRlKCdpZCcsJ3F1ZXN0Q291bnQnKTtcbnF1ZXN0Q291bnQuaW5uZXJUZXh0ID0gJ1F1ZXN0czogJyArICcwJyArJy8yMCc7XG5oZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGluZ0ltYWdlKTtcbmhlYWRlci5hcHBlbmRDaGlsZChoZWFkaW5nKTtcbmhlYWRlci5hcHBlbmRDaGlsZChxdWVzdENvdW50KTtcbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaGVhZGVyKTtcblxuLy9jcmVhdGUgcXVlc3QgbG9nXG5jb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywnY29udGFpbmVyJyk7XG5cbmNvbnN0IHRyYWNrZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmNvbnN0IGluZm9QYW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG50cmFja2VyLnNldEF0dHJpYnV0ZSgnaWQnLCd0cmFja2VyJyk7XG5pbmZvUGFuZS5zZXRBdHRyaWJ1dGUoJ2lkJywnaW5mb1BhbmUnKTtcblxuY29udGFpbmVyLmFwcGVuZENoaWxkKHRyYWNrZXIpO1xuY29udGFpbmVyLmFwcGVuZENoaWxkKGluZm9QYW5lKTtcblxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuXG4vL2NyZWF0ZSBidXR0b24gYmFyXG5jb25zdCBidXR0b25CYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmJ1dHRvbkJhci5zZXRBdHRyaWJ1dGUoJ2lkJywnYnV0dG9uQmFyJyk7XG5cbmNvbnN0IHRyYWNrZXJCdXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5jb25zdCBpbmZvUGFuZUJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbnRyYWNrZXJCdXR0b25zLnNldEF0dHJpYnV0ZSgnaWQnLCd0cmFja2VyQnV0dG9ucycpO1xuaW5mb1BhbmVCdXR0b25zLnNldEF0dHJpYnV0ZSgnaWQnLCdpbmZvUGFuZUJ1dHRvbnMnKTtcblxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0cmFja2VyQnV0dG9ucyk7XG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGluZm9QYW5lQnV0dG9ucyk7XG5cbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYnV0dG9uQmFyKTtcblxuLy9jcmVhdGUgYnV0dG9uc1xuY29uc3QgYWRkUXVlc3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbmFkZFF1ZXN0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbkJhckJ1dHRvbicpXG5hZGRRdWVzdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZFF1ZXN0Jyk7XG5hZGRRdWVzdEJ1dHRvbi5pbm5lclRleHQgPSAnQWRkIFF1ZXN0JztcblxuXG5jb25zdCBjb21wbGV0ZVF1ZXN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5jb21wbGV0ZVF1ZXN0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbkJhckJ1dHRvbicpXG5jb21wbGV0ZVF1ZXN0QnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAnY29tcGxldGVRdWVzdCcpO1xuY29tcGxldGVRdWVzdEJ1dHRvbi5pbm5lclRleHQgPSAnQ29tcGxldGUgUXVlc3QnO1xuXG50cmFja2VyQnV0dG9ucy5hcHBlbmRDaGlsZChhZGRRdWVzdEJ1dHRvbik7XG50cmFja2VyQnV0dG9ucy5hcHBlbmRDaGlsZChjb21wbGV0ZVF1ZXN0QnV0dG9uKTtcblxuYnV0dG9uQmFyLmFwcGVuZENoaWxkKHRyYWNrZXJCdXR0b25zKTtcbmJ1dHRvbkJhci5hcHBlbmRDaGlsZChpbmZvUGFuZUJ1dHRvbnMpO1xufVxuXG5leHBvcnQge2luaXRpYWxpemVTY3JlZW59O1xuXG4iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IGluaXRpYWxpemVTY3JlZW4gfSBmcm9tICcuL2luaXRpYWxpemVTY3JlZW4uanMnO1xuaW1wb3J0ICcuL29iamVjdGl2ZXMuanMnO1xuaW1wb3J0ICcuL3F1ZXN0cy5qcyc7XG5pbXBvcnQgeyBhZGRMaXN0ZW5lcnMgfSBmcm9tICcuL2RvbU1hbmlwLmpzJztcblxuaW5pdGlhbGl6ZVNjcmVlbigpO1xuYWRkTGlzdGVuZXJzKCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIk9iamVjdGl2ZSIsIm5hbWUiLCJvYmplY3RpdmVOYW1lIiwiaXNDb21wbGV0ZSIsImdldE9iamVjdGl2ZU5hbWUiLCJjb21wbGV0ZU9iamVjdGl2ZSIsImluY29tcGxldGVPYmplY3RpdmUiLCJjaGFuZ2VPYmplY3RpdmVOYW1lIiwiYXJnRGF0ZSIsInF1ZXN0QXJyYXkiLCJBcnJheSIsImxhYmVsTWFrZXIiLCJsYWJlbE1ha2VyTmFtZSIsImxhYmVsTmFtZSIsImNsYXNzTGlzdCIsImFkZCIsImRpc3BsYXlRdWVzdHMiLCJmb3JFYWNoIiwicXVlc3QiLCJjaGFuZ2VRdWVzdENob3NlbiIsInF1ZXN0RGl2IiwiZ2V0UHJpb3JpdHkiLCJpbm5lclRleHQiLCJnZXROYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsZWFyaW5mb1BhbmUiLCJpbmZvUGFuZSIsInBvcHVsYXRlUXVlc3QiLCJxdWVzdERpdnMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiZnJvbSIsImdldEVsZW1lbnRCeUlkIiwiY2xlYXJRdWVzdHMiLCJ0cmFja2VyIiwicXVlc3ROYW1lTGFiZWwiLCJ2YWx1ZSIsImNoYW5nZU5hbWUiLCJxdWVzdGR1ZURpdiIsInF1ZXN0ZHVlRGF0ZUxhYmVsIiwicXVlc3RkdWVEYXRlSW5wdXQiLCJnZXRRdWVzdGR1ZURhdGUiLCJjaGFuZ2VkdWVEYXRlIiwicXVlc3REZXNjcmlwdGlvbkxhYmVsIiwiZ2V0UXVlc3REZXNjcmlwdGlvbiIsImNoYW5nZVF1ZXN0RGVzY3JpcHRpb24iLCJvYmplY3RpdmVDb250YWluZXIiLCJvYmplY3RpdmVzQXJyYXkiLCJvYmplY3RpdmUiLCJvYmplY3RpdmVMYWJlbCIsIm9iamVjdGl2ZU51bWJlciIsImNyZWF0ZU9iamVjdGl2ZUxhYmVsIiwiZGVsZXRlT2JqZWN0aXZlQnV0dG9uIiwiaiIsImdldEF0dHJpYnV0ZSIsImFkZE9iamVjdGl2ZUJ1dHRvbiIsIm5ld09iamVjdGl2ZSIsInByaW9yaXR5RGl2IiwicHJpb3JpdHlMYWJlbCIsInByaW9yaXR5QnV0dG9uRGl2IiwicmV3YXJkc0RpdiIsInJld2FyZHNMYWJlbCIsImdldFhQIiwibmV3UXVlc3QiLCJpU3RyaW5nIiwiYnV0dG9uIiwicHJpb3JpdHlCdXR0b25zIiwiY2hhbmdlUHJpb3JpdHkiLCJhc3NpZ25YUCIsImNyZWF0ZVByaW9yaXR5QnV0dG9ucyIsImhlYWRlciIsImhlYWRpbmdJbWFnZSIsIkltYWdlIiwibG9nbyIsImhlYWRpbmciLCJxdWVzdENvdW50IiwiYm9keSIsImNvbnRhaW5lciIsImJ1dHRvbkJhciIsInRyYWNrZXJCdXR0b25zIiwiaW5mb1BhbmVCdXR0b25zIiwiYWRkUXVlc3RCdXR0b24iLCJjb21wbGV0ZVF1ZXN0QnV0dG9uIiwiaW5pdGlhbGl6ZVNjcmVlbiIsImR1ZURhdGUiLCJkZXNjcmlwdGlvbiIsInByaW9yaXR5IiwiY2hvc2VuIiwicXVlc3ROYW1lIiwicXVlc3RkdWVEYXRlIiwicXVlc3REZXNjcmlwdGlvbiIsInF1ZXN0UHJpb3JpdHkiLCJxdWVzdENob3NlbiIsImV4cGVyaWVuY2VQb2ludHMiLCJhcmdOYW1lIiwidW5jb21wbGV0ZVF1ZXN0IiwiY29tcGxldGVRdWVzdCIsImdldE9iamVjdGl2ZXMiLCJvYmplY3RpdmVzIiwiYXJnRGVzY3JpcHRpb24iLCJhcmdQcmlvcml0eSIsImlzQ2hvc2VuIiwiUXVlc3QiLCJhZGRRdWVzdCIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9