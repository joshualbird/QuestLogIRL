(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),c=t(667),A=t.n(c),d=new URL(t(705),t.b),l=a()(o()),s=A()(d);l.push([e.id,"@font-face {\n    font-family: 'Kollektif';\n    src: url("+s+") format('truetype');\n  } \n\nhtml {\n    position: relative;\n    min-height: 100%;\n}\n\nbody {\n    display: flex;\n    font-family: 'Kollektif';\n    background-color: #18191A;\n    color: #E4E6EB;\n    flex-direction: column;\n}\n\n#heading {\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n}\n\nh1 {\n    text-align: center;\n    font-size: clamp(1rem, 5vw + 1rem, 5rem);\n}\n\n#container {\n    display: flex;\n    border: 3px solid #242526;\n    height: 70vh;\n}\n\n#tracker {\n    border-right: 3px solid #242526;\n    width: 33%;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n}\n\n#infoPane {\n    display: flex;\n    flex-direction: column;\n    border-left: 3px solid #242526;\n    width: 67%;\n    background-color: #242526;\n    gap: 16px;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n} \n\n#trackerButtons {\n    display: flex;\n    gap: 16px;\n    justify-content: flex-start;\n    margin-top: 4px;\n}\n\n.buttonBarButton {\n    border-radius: 6px;\n    border-color: #18191A;\n    padding: 8px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border-style: solid;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n}\n\n.buttonBarButton:hover {\n    border: solid rgb(99, 0, 0) 2px;\n    background-color: #18191A;\n}\n\n#questCount {\n    text-align: right;\n}\n\n.questDivSelected {\n    background-color: #242526;\n}\n\n#questNameLabel {\n    text-align: center;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questDescriptionLabel {\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questdueDateInput {\n    border: none;\n    background-color: #3A3B3C;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 4px;\n}\n\n#questdueDateLabel {\n    text-align: center;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#addObjectiveButton {\n    justify-content: center;\n    width: 25%;\n    border-radius: 6px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border: none;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n    \n}\n\n.priorityButton.priorityButtonSelected {\n    border: solid 2px yellow;\n}\n\n.priorityButton {\n    width: 20%;\n    padding: 4px;\n    border-style: none;\n    border-radius: 4px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n}\n\n#priorityLabel {\n    text-align: center;\n}\n\n#button0 {\n    background-color: grey;\n}\n\n#button1 {\n    background-color: green;\n}\n\n#button2 {\n    background-color: rgb(0, 47, 255);\n}\n\n#button3 {\n    background-color: purple;\n}\n\n#button4 {\n    background-color: orange;\n}\n\n.questPriority1 {\n    color: grey;\n}\n\n.questPriority2 {\n    color: green;\n}\n\n.questPriority3 {\n    color: rgb(0, 47, 255);\n}\n\n.questPriority4 {\n    color: purple;\n}\n\n.questPriority5 {\n    color: orange;\n}\n\n.objectiveContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n}\n\n.objective {\n    width: 94%;\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;   \n}\n\n.deleteObjectiveButton {\n    border: none;\n    width: 5%;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 6px;\n    align-self: flex-end;\n}\n\n.deleteObjectiveButton:hover {\n    background-color: #3A3B3C;\n    color: rgb(99, 0, 0);\n}\n\ninput {\n    background-color: #242526;\n    color: #E4E6EB;\n}\n\n#rewardsLabel {\n    text-align: center;\n    color: yellow;\n    align-self: flex-end;\n    margin-top: clamp(1rem, 5vw + 1rem, 5rem);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB,+DAAqD;EACvD;;AAEF;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,yBAAyB;IACzB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,+BAA+B;IAC/B,UAAU;IACV,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,UAAU;IACV,yBAAyB;IACzB,SAAS;IACT,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,SAAS;IACT,2BAA2B;IAC3B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,+BAA+B;IAC/B,gBAAgB;IAChB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;IACI,+BAA+B;IAC/B,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,wCAAwC;IACxC,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,2CAA2C;IAC3C,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,2CAA2C;IAC3C,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,2CAA2C;IAC3C,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,UAAU;IACV,kBAAkB;IAClB,+BAA+B;IAC/B,gBAAgB;IAChB,YAAY;IACZ,0CAA0C;;AAE9C;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,0CAA0C;AAC9C;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,8BAA8B;;AAElC;;AAEA;IACI,UAAU;IACV,eAAe;IACf,2CAA2C;IAC3C,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,+BAA+B;IAC/B,gBAAgB;IAChB,2CAA2C;IAC3C,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,oBAAoB;IACpB,yCAAyC;AAC7C",sourcesContent:["@font-face {\n    font-family: 'Kollektif';\n    src: url('./Assets/Kollektif.ttf') format('truetype');\n  } \n\nhtml {\n    position: relative;\n    min-height: 100%;\n}\n\nbody {\n    display: flex;\n    font-family: 'Kollektif';\n    background-color: #18191A;\n    color: #E4E6EB;\n    flex-direction: column;\n}\n\n#heading {\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n}\n\nh1 {\n    text-align: center;\n    font-size: clamp(1rem, 5vw + 1rem, 5rem);\n}\n\n#container {\n    display: flex;\n    border: 3px solid #242526;\n    height: 70vh;\n}\n\n#tracker {\n    border-right: 3px solid #242526;\n    width: 33%;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n}\n\n#infoPane {\n    display: flex;\n    flex-direction: column;\n    border-left: 3px solid #242526;\n    width: 67%;\n    background-color: #242526;\n    gap: 16px;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n} \n\n#trackerButtons {\n    display: flex;\n    gap: 16px;\n    justify-content: flex-start;\n    margin-top: 4px;\n}\n\n.buttonBarButton {\n    border-radius: 6px;\n    border-color: #18191A;\n    padding: 8px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border-style: solid;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);    \n}\n\n.buttonBarButton:hover {\n    border: solid rgb(99, 0, 0) 2px;\n    background-color: #18191A;\n}\n\n#questCount {\n    text-align: right;\n}\n\n.questDivSelected {\n    background-color: #242526;\n}\n\n#questNameLabel {\n    text-align: center;\n    font-size: clamp(1rem, 2vw + 1rem, 2rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questDescriptionLabel {\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#questdueDateInput {\n    border: none;\n    background-color: #3A3B3C;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 4px;\n}\n\n#questdueDateLabel {\n    text-align: center;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;\n    border-radius: 4px;\n}\n\n#addObjectiveButton {\n    justify-content: center;\n    width: 25%;\n    border-radius: 6px;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    border: none;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n    \n}\n\n.priorityButton.priorityButtonSelected {\n    border: solid 2px yellow;\n}\n\n.priorityButton {\n    width: 20%;\n    padding: 4px;\n    border-style: none;\n    border-radius: 4px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.5rem);\n}\n\n#priorityLabel {\n    text-align: center;\n}\n\n#button0 {\n    background-color: grey;\n}\n\n#button1 {\n    background-color: green;\n}\n\n#button2 {\n    background-color: rgb(0, 47, 255);\n}\n\n#button3 {\n    background-color: purple;\n}\n\n#button4 {\n    background-color: orange;\n}\n\n.questPriority1 {\n    color: grey;\n}\n\n.questPriority2 {\n    color: green;\n}\n\n.questPriority3 {\n    color: rgb(0, 47, 255);\n}\n\n.questPriority4 {\n    color: purple;\n}\n\n.questPriority5 {\n    color: orange;\n}\n\n.objectiveContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n}\n\n.objective {\n    width: 94%;\n    margin-top: 8px;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    background-color: #3A3B3C;\n    border: none;   \n}\n\n.deleteObjectiveButton {\n    border: none;\n    width: 5%;\n    background-color: rgb(99, 0, 0);\n    color: #ffc400cc;\n    font-size: clamp(1rem, 1vw + 1rem, 1.25rem);\n    border-radius: 6px;\n    align-self: flex-end;\n}\n\n.deleteObjectiveButton:hover {\n    background-color: #3A3B3C;\n    color: rgb(99, 0, 0);\n}\n\ninput {\n    background-color: #242526;\n    color: #E4E6EB;\n}\n\n#rewardsLabel {\n    text-align: center;\n    color: yellow;\n    align-self: flex-end;\n    margin-top: clamp(1rem, 5vw + 1rem, 5rem);\n}"],sourceRoot:""}]);const u=l},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(a[A]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var A=e[c],d=r.base?A[0]+r.base:A[0],l=i[d]||0,s="".concat(d," ").concat(l);i[d]=l+1;var u=t(s),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=c,n.splice(c,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var A=r(e,o),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=A}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},705:(e,n,t)=>{e.exports=t.p+"33fdfd1d0f21c0c8283b.ttf"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),A=t.n(c),d=t(216),l=t.n(d),s=t(589),u=t.n(s),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const C=e=>{let n=e,t=!1;return{getObjectiveName:()=>n,completeObjective:()=>{t=!0},incompleteObjective:()=>{t=!1},changeObjectiveName:function(e){n=e}}};let b=new Array;const B=function(e){let n=e;return n=document.createElement("input"),n.classList.add("infoPaneLabel"),n.setAttribute("id",e),n.setAttribute("type","text"),n},f=function(){b.forEach((e=>{e.changeQuestChosen("false");let n=document.createElement("div");n.classList.add("questDiv"),e.getPriority()<="1"?n.classList.add("questPriority1"):"2"===e.getPriority()?n.classList.add("questPriority2"):"3"===e.getPriority()?n.classList.add("questPriority3"):"4"===e.getPriority()?n.classList.add("questPriority4"):"5"===e.getPriority()&&n.classList.add("questPriority5"),n.innerText=e.getName(),n.addEventListener("click",(function(){v(infoPane),h(e);let t=document.getElementsByClassName("questDiv");Array.from(t).forEach((function(e){e.classList.remove("questDivSelected")})),n.classList.add("questDivSelected"),e.changeQuestChosen("true")})),document.getElementById("tracker").appendChild(n)}))},g=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},v=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},h=function(e){let n=B("questNameLabel");n.value=e.getName(),n.addEventListener("input",(function(n){e.changeName(this.value)})),infoPane.appendChild(n);let t=document.createElement("div");t.classList.add("questdueDiv");let r=document.createElement("label");r.setAttribute("for","questdueDateInput"),r.innerText="Quest Completion Due by: ";let o=document.createElement("input");o.setAttribute("type","date"),o.value=e.getQuestdueDate(),o.classList.add("infoPaneLabel"),o.setAttribute("id","questdueDateInput"),o.addEventListener("change",(function(n){e.changedueDate(this.value)})),t.appendChild(r),t.appendChild(o),infoPane.appendChild(t);let i=B("questDescriptionLabel");i.value=e.getQuestDescription(),i.addEventListener("input",(function(n){e.changeQuestDescription(this.value)})),infoPane.appendChild(i);let a=document.createElement("div");a.classList.add("objectiveContainer"),infoPane.appendChild(a);let c=1;if(e.objectivesArray.forEach((n=>{let t=function(e){let n=document.createElement("input");return n.classList.add("objective"),n.setAttribute("id",e),n.setAttribute("type","text"),n}("ObjectiveDiv"+c);t.value=n.getObjectiveName(),t.addEventListener("input",(function(e){n.changeObjectiveName(this.value)}));let r=document.createElement("button");r.classList.add("deleteObjectiveButton"),t.setAttribute("id","ObjectiveLabel"+c),r.setAttribute("data-index",c),r.innerText="x",r.addEventListener("click",(function(n){for(let n=e.objectivesArray.length;n>0;--n)String(n)===this.getAttribute("data-index")&&(e.objectivesArray.splice(n-1,1),v(infoPane),h(e))})),a.appendChild(t),a.appendChild(r),c++})),e.objectivesArray.length<3){let n=document.createElement("button");n.setAttribute("id","addObjectiveButton"),n.innerText="Add Objective",infoPane.appendChild(n),n.addEventListener("click",(function(){if(v(infoPane),e.objectivesArray.length<3){let n=C("Enter Quest Objective #"+(e.objectivesArray.length+1)+" here...");e.objectivesArray.push(n)}h(e)}))}let A=document.createElement("div"),d=document.createElement("div"),l=document.createElement("div");A.setAttribute("id","priorityDiv"),d.setAttribute("id","priorityLabel"),l.setAttribute("id","priorityButtonDiv"),d.innerText="Priority",A.appendChild(d),A.appendChild(l);let s=document.createElement("div"),u=document.createElement("div");s.setAttribute("id","rewardsDiv"),u.setAttribute("id","rewardsLabel"),u.innerText="Reward: "+e.getXP()+"xp",function(e,n,t){for(let r=0;r<5;r++){let o="button"+String(r),i=document.createElement("button");i.setAttribute("id",o),i.classList.add("priorityButton"),n.getPriority()===String(r+1)&&i.classList.add("priorityButtonSelected"),i.innerText=r+1,e.appendChild(i),i.addEventListener("click",(function(){let e=document.getElementsByClassName("priorityButtonSelected"),r=document.getElementById("tracker");e=Array.from(e),e.forEach((function(e){e.classList.remove("priorityButtonSelected")})),n.changePriority(this.innerText),n.assignXP(),t.innerText="Reward: "+n.getXP()+"xp",i.classList.add("priorityButtonSelected"),g(r),f()}))}}(l,e,u),infoPane.appendChild(A),s.appendChild(u),infoPane.appendChild(s)};!function(){const e=document.createElement("div");e.setAttribute("id","heading");const n=document.createElement("h1");n.innerText="Quest Log IRL";const t=document.createElement("div");t.setAttribute("id","questCount"),t.innerText="Quests: 0/20",e.appendChild(n),e.appendChild(t),document.body.appendChild(e);const r=document.createElement("div");r.setAttribute("id","container");const o=document.createElement("div"),i=document.createElement("div");o.setAttribute("id","tracker"),i.setAttribute("id","infoPane"),r.appendChild(o),r.appendChild(i),document.body.appendChild(r);const a=document.createElement("div");a.setAttribute("id","buttonBar");const c=document.createElement("div"),A=document.createElement("div");c.setAttribute("id","trackerButtons"),A.setAttribute("id","infoPaneButtons"),document.body.appendChild(c),document.body.appendChild(A),document.body.appendChild(a);const d=document.createElement("button");d.classList.add("buttonBarButton"),d.setAttribute("id","addQuest"),d.innerText="Add Quest";const l=document.createElement("button");l.classList.add("buttonBarButton"),l.setAttribute("id","completeQuest"),l.innerText="Complete Quest",c.appendChild(d),c.appendChild(l),a.appendChild(c),a.appendChild(A)}(),document.getElementById("addQuest").addEventListener("click",(function(e){!function(){document.getElementById("infoPane");let e=document.getElementById("tracker"),n=(document.getElementById("questCount"),((e,n,t,r,o)=>{let i="New Quest Name",a="2022-01-01",c="Enter Quest Description here...",A=[],d=1,l="false",s=!1,u=0;return{getName:()=>i,changeName:function(e){i=e},getQuestdueDate:()=>a,uncompleteQuest:()=>s=!1,completeQuest:()=>s=!0,getObjectives:()=>objectives,getQuestDescription:()=>c,changeQuestDescription:function(e){c=e},assignXP:()=>"1"===d?(u=10*A.length,u):"2"===d?(u=25*A.length,u):"3"===d?(u=50*A.length,u):"4"===d?(u=75*A.length,u):"5"===d?(u=100*A.length,u):void 0,getXP:()=>u,getPriority:()=>d,changePriority:function(e){d=e},changedueDate:function(e){a=e},changeQuestChosen:function(e){l=e},isChosen:()=>l,objectivesArray:A}})());if(b.length<20){b.push(n),g(e),f(),document.getElementById("questCount").innerText="Quests: "+b.length+"/20";let t=C("Enter Quest Objective here...");n.objectivesArray.push(t)}}()})),document.getElementById("completeQuest").addEventListener("click",(function(e){document.getElementById("questDivSelected");for(let e=0;e<b.length;e++)console.log("is quest chosen? "+b[e].isChosen()),"true"===b[e].isChosen()&&(b.splice(e,1),g(tracker),f(),v(infoPane))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,